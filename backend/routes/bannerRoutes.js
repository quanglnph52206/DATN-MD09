const express = require("express");
const router = express.Router();
const Banner = require("../model/Banner");

// üü¢ L·∫•y t·∫•t c·∫£ banner
router.get("/", async (req, res) => {
    try {
        const banners = await Banner.find();
        res.status(200).json(banners);
    } catch (error) {
        res.status(500).json({ message: "L·ªói l·∫•y danh s√°ch banner", error: error.message });
    }
});

// üü¢ Th√™m banner
router.post("/", async (req, res) => {
    try {
        const { image } = req.body;
        if (!image) {
            return res.status(400).json({ message: "Vui l√≤ng cung c·∫•p ƒë∆∞·ªùng d·∫´n ·∫£nh" });
        }

        const newBanner = new Banner({ image });
        await newBanner.save();
        res.status(201).json({ message: "Th√™m banner th√†nh c√¥ng", banner: newBanner });
    } catch (error) {
        res.status(500).json({ message: "L·ªói th√™m banner", error: error.message });
    }
});

// üü¢ C·∫≠p nh·∫≠t banner
router.put("/:id", async (req, res) => {
    try {
        const { id } = req.params;
        const { image } = req.body;

        const updated = await Banner.findByIdAndUpdate(id, { image }, { new: true });
        if (!updated) {
            return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y banner ƒë·ªÉ c·∫≠p nh·∫≠t" });
        }

        res.status(200).json({ message: "C·∫≠p nh·∫≠t banner th√†nh c√¥ng", banner: updated });
    } catch (error) {
        res.status(500).json({ message: "L·ªói c·∫≠p nh·∫≠t banner", error: error.message });
    }
});

// üü¢ X√≥a banner
router.delete("/:id", async (req, res) => {
    try {
        const { id } = req.params;
        const deleted = await Banner.findByIdAndDelete(id);
        if (!deleted) {
            return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y banner ƒë·ªÉ x√≥a" });
        }

        res.status(200).json({ message: "X√≥a banner th√†nh c√¥ng" });
    } catch (error) {
        res.status(500).json({ message: "L·ªói x√≥a banner", error: error.message });
    }
});

module.exports = router;
